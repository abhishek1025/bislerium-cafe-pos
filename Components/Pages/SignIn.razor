@page "/"
@inject AppUtils AppUtils
@inject UserServices UserServices;
@inject User User;


<h1>Log In</h1>

<p>Log in to your account to view your orders.</p>


<MudTextField @bind-Value="UserName" Label="User Name" Variant="Variant.Outlined"></MudTextField>
<MudTextField @bind-Value="Password" Label="Passsword" Variant="Variant.Outlined"></MudTextField>

@*
<MudSelect T="string" Label="Role" AnchorOrigin="Origin.BottomCenter">
    @foreach (Roles role in Enum.GetValues(typeof(Roles)))
    {
        <MudSelectItem Value="@role.ToString()" />
    }
</MudSelect>

<MudSelect T="string" Label="Coffee" AnchorOrigin="Origin.BottomCenter">
    <MudSelectItem Value="@("Cappuccino")" />
    <MudSelectItem Value="@("Cafe Latte")" />
    <MudSelectItem Value="@("Espresso")" />
</MudSelect>

@foreach (User user in users)
{
    <p>UserName: @user.UserName</p>
    <p>Role: @user.Role</p>
    <p>Password: @user.Password</p>
    <p>Has User Changed Initial Password: @user.HasInitialPasswordChanged</p>
})
*@

<p>
    <select @bind="Role">
        <option value="">Select a Role</option>
        @foreach (Role role in Enum.GetValues(typeof(Role)))
        {
            <option Value="@role.ToString()"> @role.ToString() </option>
        }
    </select>
</p>

<button @onclick="LogInHandler">LogIn</button>

<br />


@if (currentUser != null)
{
    <p>UserName: @currentUser.UserName</p>
    <p>Role: @currentUser.Role</p>
    <p>Password: @currentUser.Password</p>
    <p>Has User Changed Initial Password: @currentUser.HasInitialPasswordChanged</p>
}


<p>@Role</p>

@code{
    public string UserName { get; set; }
    public string Password { get; set; }
    public string Role { get; set; }

    public User currentUser;

    public string Path = AppUtils.GetAppDataDirectory();

    public List<User> users = UserServices.GetAllUsersFromJsonFile();

    public void LogInHandler()
    {
      
        Console.WriteLine(UserName, Password, Role);
        currentUser = UserServices.LogIn(UserName, Password, Role);
    }
}